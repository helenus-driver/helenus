<?xml version="1.0"?>
<!--                                                                           -->
<!-- Copyright (C) 2015-2015 The Helenus Driver Project Authors.               -->
<!--                                                                           -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");           -->
<!-- you may not use this file except in compliance with the License.          -->
<!-- You may obtain a copy of the License at                                   -->
<!--                                                                           -->
<!--      http://www.apache.org/licenses/LICENSE-2.0                           -->
<!--                                                                           -->
<!-- Unless required by applicable law or agreed to in writing, software       -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,         -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  -->
<!-- See the License for the specific language governing permissions and       -->
<!-- limitations under the License.                                            -->
<!--                                                                           -->
<!-- @copyright 2015-2015 The Helenus Driver Project Authors                   -->
<!--                                                                           -->
<!-- @author The Helenus Driver Project Authors                                -->
<!-- @version 1 - Jan 15, 2015 - paouelle - Creation                           -->
<!--                                                                           -->
<!-- @since 1.0                                                                -->
<!--                                                                           -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.helenusdriver</groupId>
  <artifactId>helenus</artifactId>
  <packaging>pom</packaging>
  <version>1.0.10-SNAPSHOT</version>

  <name>Helenus</name>
  <description>JPA-like syntax for annotating POJO classes for persistence via Cassandra's Java driver</description>
  <url>https://github.com/helenusdriver/helenus</url>
  
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <distribution>repo</distribution>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  
  <scm>
    <connection>scm:git:git://github.com/helenusdriver/helenus.git</connection>
    <developerConnection>scm:git:git@github.com:helenusdriver/helenus.git</developerConnection>
    <url>http://github.com/helenusdriver/helenus/tree/master/</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/helenusdriver/helenus/issues</url>
  </issueManagement>
  
  <distributionManagement>
    <site>
      <id>github.com</id>
      <url>gitsite:git@github.com/helenusdriver/helenus.git</url>
    </site>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  
  <developers>
    <developer>
      <name>Patrick Ouellet</name>
      <id>paouelle</id>
      <url>https://github.com/paouelle</url>
    </developer>
  </developers>
  
  <properties>
    <helenus-version>1.0.10-SNAPSHOT</helenus-version>
    
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java-version>1.8</java-version>
    <log4j2-version>2.2</log4j2-version>
    <log4j-version>1.2.17</log4j-version>
    <commons-lang3-version>3.3.2</commons-lang3-version>
    <commons-collections-version>4.0</commons-collections-version>
    <commons-cli-version>1.2</commons-cli-version>
    <commons-codec-version>1.10</commons-codec-version>
    <reflections-version>0.9.9</reflections-version>
    <lombok-version>1.16.2</lombok-version>
    <cassandra-version>2.1.3</cassandra-version>
    <cassandra-driver-version>2.1.4</cassandra-driver-version>
    <glassfish-version>1.0.4</glassfish-version>
    
    <findbugs-version>3.0.0</findbugs-version>

    <junit-version>4.12</junit-version>
    <jmockit-version>1.7</jmockit-version>
    <javassist-version>3.12.1.GA</javassist-version>
    
    <exec-maven-plugin-version>1.3.2</exec-maven-plugin-version>
  </properties>
  
  <build>
    <pluginManagement>
      <plugins>
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-compiler-plugin</artifactId>
	  <version>3.1</version>
	  <configuration>
	    <source>${java-version}</source>
	    <target>${java-version}</target>
	    <compilerArgument>-Xlint:unchecked</compilerArgument>
	  </configuration>
	</plugin>
	<plugin>
	  <groupId>org.sonatype.plugins</groupId>
	  <artifactId>nexus-staging-maven-plugin</artifactId>
	  <version>1.6.3</version>
	  <extensions>true</extensions>
	  <configuration>
	    <serverId>ossrh</serverId>
	    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
	    <autoReleaseAfterClose>true</autoReleaseAfterClose>
	  </configuration>
	</plugin>
	<plugin>
	  <groupId>org.apache.maven.plugins</groupId>
	  <artifactId>maven-release-plugin</artifactId>
	  <version>2.5</version>
	  <configuration>
	    <autoVersionSubmodules>true</autoVersionSubmodules>
	    <useReleaseProfile>false</useReleaseProfile>
	    <releaseProfiles>release</releaseProfiles>
	    <goals>deploy</goals>
	  </configuration>
	</plugin>
	<!-- This plugin's configuration is used to store Eclipse m2e settings 
	     only. It has no influence on the Maven build itself. -->
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>1.0.0</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>build-helper-maven-plugin</artifactId>
		    <versionRange>[1.0,)</versionRange>
		    <goals>
		      <goal>add-source</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <execute>
		      <runOnIncremental>false</runOnIncremental>
		    </execute>
		  </action>
		</pluginExecution>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>exec-maven-plugin</artifactId>
		    <versionRange>[1.0,)</versionRange>
		    <goals>
		      <goal>java</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <execute />
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>
	  </configuration>
	</plugin>
	<plugin>
	  <groupId>org.codehaus.mojo</groupId>
	  <artifactId>build-helper-maven-plugin</artifactId>
	  <version>1.1</version>
	</plugin>
	<plugin>
	  <groupId>org.codehaus.mojo</groupId>
	  <artifactId>exec-maven-plugin</artifactId>
	  <version>${exec-maven-plugin-version}</version>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-source-plugin</artifactId>
	    <version>2.2.1</version>
	    <executions>
	      <execution>
		<id>attach-sources</id>
		<goals>
		  <goal>jar-no-fork</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-javadoc-plugin</artifactId>
	    <version>2.9.1</version>
	    <executions>
	      <execution>
		<id>attach-javadocs</id>
		<goals>
		  <goal>jar</goal>
		</goals>
	      </execution>
	    </executions>
	    <configuration>
	      <bottom><![CDATA[Copyright (C) 2015-2015 <a href="https://github.com/helenusdriver/helenus">The Helenus Driver Project</a> Authors.]]>
	      </bottom>
	      <detectLinks>true</detectLinks>
	      <tags>
		<tag>
		  <name>copyright</name>
		  <placement>a</placement>
		  <head>Copyright:</head>
		</tag>
	      </tags>
	    </configuration>
	  </plugin>
	  <!-- The Maven GPG plugin is used to sign the components -->
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-gpg-plugin</artifactId>
	    <version>1.5</version>
	    <executions>
	      <execution>
		<id>sign-artifacts</id>
		<phase>verify</phase>
		<goals>
		  <goal>sign</goal>
		</goals>
	      </execution>
	    </executions>
	  </plugin>
	</plugins>
      </build>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <!-- Helenus Libraries -->
      <dependency>
	<groupId>com.github.helenusdriver</groupId>
	<artifactId>helenus-commons</artifactId>
	<version>${helenus-version}</version>
      </dependency>
      <dependency>
	<groupId>com.github.helenusdriver</groupId>
	<artifactId>helenus-api</artifactId>
	<version>${helenus-version}</version>
      </dependency>

      <!-- Product libraries -->
      <dependency>
	<groupId>org.apache.commons</groupId>
	<artifactId>commons-lang3</artifactId>
	<version>${commons-lang3-version}</version>
      </dependency>
      <dependency>
	<groupId>org.apache.commons</groupId>
	<artifactId>commons-collections4</artifactId>
	<version>${commons-collections-version}</version>
      </dependency>
      <dependency>
	<groupId>commons-cli</groupId>
	<artifactId>commons-cli</artifactId>
	<version>${commons-cli-version}</version>
      </dependency>
      <dependency>
	<groupId>commons-codec</groupId>
	<artifactId>commons-codec</artifactId>
	<version>${commons-codec-version}</version>
      </dependency>
      <dependency>
	<groupId>org.apache.logging.log4j</groupId>
	<artifactId>log4j-slf4j-impl</artifactId>
	<version>${log4j2-version}</version>
	<scope>compile</scope>
      </dependency>
      <dependency>
	<groupId>org.apache.logging.log4j</groupId>
	<artifactId>log4j-api</artifactId>
	<version>${log4j2-version}</version>
	<scope>compile</scope>
      </dependency>
      <dependency>
	<groupId>org.apache.logging.log4j</groupId>
	<artifactId>log4j-core</artifactId>
	<version>${log4j2-version}</version>
	<scope>compile</scope>
      </dependency>
      <dependency>
	<groupId>org.apache.logging.log4j</groupId>
	<artifactId>log4j-1.2-api</artifactId>
	<version>${log4j2-version}</version>
	<scope>runtime</scope> <!-- because we do not want to compile with this wrapper api -->
      </dependency>
      <dependency>
	<groupId>log4j</groupId>
	<artifactId>log4j</artifactId>
	<version>${log4j-version}</version>
	<scope>provided</scope> <!-- because we want to run with the log4j2 api wrapper for log4j above -->
      </dependency>
      <dependency>
	<groupId>org.projectlombok</groupId>
	<artifactId>lombok</artifactId>
	<version>${lombok-version}</version>
      </dependency>
      <dependency>
	<groupId>org.reflections</groupId>
	<artifactId>reflections</artifactId>
	<version>${reflections-version}</version>
      </dependency>
      <dependency>
	<groupId>com.datastax.cassandra</groupId>
	<artifactId>cassandra-driver-core</artifactId>
	<version>${cassandra-driver-version}</version>
      </dependency>
      <dependency>
	<groupId>org.glassfish</groupId>
	<artifactId>javax.json</artifactId>
	<version>${glassfish-version}</version>
      </dependency>
      
      <!-- Static analysis -->
      <dependency>
	<groupId>com.google.code.findbugs</groupId>
	<artifactId>findbugs</artifactId>
	<version>${findbugs-version}</version>
      </dependency>
      <dependency>
	<groupId>com.google.code.findbugs</groupId>
	<artifactId>annotations</artifactId>
	<version>${findbugs-version}</version>
      </dependency>
      
      <!-- JUnit test and mock libraries -->
      <dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>${junit-version}</version>
	<scope>test</scope>
      </dependency>
      <dependency>
	<groupId>com.googlecode.jmockit</groupId>
	<artifactId>jmockit</artifactId>
	<version>${jmockit-version}</version>
	<scope>test</scope>
      </dependency>
      <dependency>
	<groupId>javassist</groupId>
	<artifactId>javassist</artifactId>
	<version>${javassist-version}</version>
	<scope>test</scope>
      </dependency>      
    </dependencies>
  </dependencyManagement>
    
  <modules>
    <module>commons</module>
    <module>api</module>
    <module>impl</module>
    <module>examples</module>
  </modules>
</project>
